{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proxies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxyForAddress",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61033c8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a9d4630c1461008f578063c4552791146100a2578063f2fde38b146100cb575b600080fd5b6100646100de565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006461009d36600461027c565b61011d565b6100736100b03660046102af565b6001602052600090815260409020546001600160a01b031681565b6100646100d93660046102af565b610175565b6000546001600160a01b031633146101115760405162461bcd60e51b8152600401610108906102d1565b60405180910390fd5b61011b6000610210565b565b6000546001600160a01b031633146101475760405162461bcd60e51b8152600401610108906102d1565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461019f5760405162461bcd60e51b8152600401610108906102d1565b6001600160a01b0381166102045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610108565b61020d81610210565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461027757600080fd5b919050565b6000806040838503121561028f57600080fd5b61029883610260565b91506102a660208401610260565b90509250929050565b6000602082840312156102c157600080fd5b6102ca82610260565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f4f9c64f267c748aa9b05deb806255c5513bc429b4298a6eae097c327d8abd4b64736f6c63430008140033",
    "sourceMap": "203:586:17:-:0;;;;;;;;;;;;-1:-1:-1;921:32:19;719:10:30;921:18:19;:32::i;:::-;203:586:17;;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;203:586:17:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a9d4630c1461008f578063c4552791146100a2578063f2fde38b146100cb575b600080fd5b6100646100de565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006461009d36600461027c565b61011d565b6100736100b03660046102af565b6001602052600090815260409020546001600160a01b031681565b6100646100d93660046102af565b610175565b6000546001600160a01b031633146101115760405162461bcd60e51b8152600401610108906102d1565b60405180910390fd5b61011b6000610210565b565b6000546001600160a01b031633146101475760405162461bcd60e51b8152600401610108906102d1565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461019f5760405162461bcd60e51b8152600401610108906102d1565b6001600160a01b0381166102045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610108565b61020d81610210565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461027757600080fd5b919050565b6000806040838503121561028f57600080fd5b61029883610260565b91506102a660208401610260565b90509250929050565b6000602082840312156102c157600080fd5b6102ca82610260565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f4f9c64f267c748aa9b05deb806255c5513bc429b4298a6eae097c327d8abd4b64736f6c63430008140033",
    "sourceMap": "203:586:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:19;;;:::i;:::-;;1036:85;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;1036:85;;;-1:-1:-1;;;;;178:32:36;;;160:51;;148:2;133:18;1036:85:19;;;;;;;641:146:17;;;;;;:::i;:::-;;:::i;245:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;245:42:17;;;1918:198:19;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;641:146:17:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;746:17:17;;::::1;;::::0;;;:7:::1;:17;::::0;;;;:36;;-1:-1:-1;;;;;;746:36:17::1;::::0;;;::::1;;::::0;;641:146::o;1918:198:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:19;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:19;;1419:2:36;1998:73:19::1;::::0;::::1;1401:21:36::0;1458:2;1438:18;;;1431:30;1497:34;1477:18;;;1470:62;-1:-1:-1;;;1548:18:36;;;1541:36;1594:19;;1998:73:19::1;1217:402:36::0;1998:73:19::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;222:173:36:-;290:20;;-1:-1:-1;;;;;339:31:36;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:260::-;468:6;476;529:2;517:9;508:7;504:23;500:32;497:52;;;545:1;542;535:12;497:52;568:29;587:9;568:29;:::i;:::-;558:39;;616:38;650:2;639:9;635:18;616:38;:::i;:::-;606:48;;400:260;;;;;:::o;665:186::-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;816:29;835:9;816:29;:::i;:::-;806:39;665:186;-1:-1:-1;;;665:186:36:o;856:356::-;1058:2;1040:21;;;1077:18;;;1070:30;1136:34;1131:2;1116:18;;1109:62;1203:2;1188:18;;856:356::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "owner()": "8da5cb5b",
    "proxies(address)": "c4552791",
    "renounceOwnership()": "715018a6",
    "setProxy(address,address)": "a9d4630c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxyForAddress\",\"type\":\"address\"}],\"name\":\"setProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple mock ProxyRegistry for use in local tests with minimal security\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setProxy(address,address)\":{\"params\":{\"_address\":\"The address that the proxy will act on behalf of\",\"_proxyForAddress\":\"The proxy that will act on behalf of the address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxy(address,address)\":{\"notice\":\"Allow the owner to set a proxy for testing\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockProxyRegistry.sol\":\"MockProxyRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidity-parser/=node_modules/truffle-flattener/node_modules/@solidity-parser/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":truffle/=node_modules/truffle/\",\":wyvern-js/=node_modules/wyvern-js/\"]},\"sources\":{\"contracts/test/MockProxyRegistry.sol\":{\"keccak256\":\"0x5dbf970a861e383f66dd30a333cd97b4ac27c6cf2986a2f467020c812c03025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9943269309b2df3a44206c6ea09c48206dc5bb84de2dadf8ca7f8f325d6c11f2\",\"dweb:/ipfs/QmRkeN29qowzFnWoZ8VqSmpLKaqxPJx9AkkP5LzGXBHdgU\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proxies",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_proxyForAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProxy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setProxy(address,address)": {
            "params": {
              "_address": "The address that the proxy will act on behalf of",
              "_proxyForAddress": "The proxy that will act on behalf of the address"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setProxy(address,address)": {
            "notice": "Allow the owner to set a proxy for testing"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidity-parser/=node_modules/truffle-flattener/node_modules/@solidity-parser/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":truffle/=node_modules/truffle/",
        ":wyvern-js/=node_modules/wyvern-js/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/MockProxyRegistry.sol": "MockProxyRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/test/MockProxyRegistry.sol": {
        "keccak256": "0x5dbf970a861e383f66dd30a333cd97b4ac27c6cf2986a2f467020c812c03025e",
        "urls": [
          "bzz-raw://9943269309b2df3a44206c6ea09c48206dc5bb84de2dadf8ca7f8f325d6c11f2",
          "dweb:/ipfs/QmRkeN29qowzFnWoZ8VqSmpLKaqxPJx9AkkP5LzGXBHdgU"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7",
        "urls": [
          "bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23",
          "dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3",
        "urls": [
          "bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405",
          "dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/MockProxyRegistry.sol",
    "id": 3314,
    "exportedSymbols": {
      "Context": [
        6173
      ],
      "MockProxyRegistry": [
        3313
      ],
      "Ownable": [
        3548
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:757:17",
    "nodes": [
      {
        "id": 3287,
        "nodeType": "PragmaDirective",
        "src": "33:23:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3288,
        "nodeType": "ImportDirective",
        "src": "59:52:17",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3314,
        "sourceUnit": 3549,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3313,
        "nodeType": "ContractDefinition",
        "src": "203:586:17",
        "nodes": [
          {
            "id": 3295,
            "nodeType": "VariableDeclaration",
            "src": "245:42:17",
            "nodes": [],
            "constant": false,
            "functionSelector": "c4552791",
            "mutability": "mutable",
            "name": "proxies",
            "nameLocation": "280:7:17",
            "scope": 3313,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3294,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3292,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "253:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "245:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3293,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3312,
            "nodeType": "FunctionDefinition",
            "src": "641:146:17",
            "nodes": [],
            "body": {
              "id": 3311,
              "nodeType": "Block",
              "src": "738:49:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3305,
                        "name": "proxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3295,
                        "src": "746:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3307,
                      "indexExpression": {
                        "id": 3306,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "754:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "746:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3308,
                      "name": "_proxyForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3300,
                      "src": "766:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "746:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3310,
                  "nodeType": "ExpressionStatement",
                  "src": "746:36:17"
                }
              ]
            },
            "documentation": {
              "id": 3296,
              "nodeType": "StructuredDocumentation",
              "src": "414:224:17",
              "text": " @notice Allow the owner to set a proxy for testing\n @param _address           The address that the proxy will act on behalf of\n @param _proxyForAddress  The proxy that will act on behalf of the address"
            },
            "functionSelector": "a9d4630c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3303,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3302,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "724:9:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "724:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "724:11:17"
              }
            ],
            "name": "setProxy",
            "nameLocation": "650:8:17",
            "parameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3298,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "667:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3312,
                  "src": "659:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3300,
                  "mutability": "mutable",
                  "name": "_proxyForAddress",
                  "nameLocation": "685:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3312,
                  "src": "677:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:44:17"
            },
            "returnParameters": {
              "id": 3304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:17"
            },
            "scope": 3313,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3290,
              "name": "Ownable",
              "nameLocations": [
                "233:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3548,
              "src": "233:7:17"
            },
            "id": 3291,
            "nodeType": "InheritanceSpecifier",
            "src": "233:7:17"
          }
        ],
        "canonicalName": "MockProxyRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3289,
          "nodeType": "StructuredDocumentation",
          "src": "114:88:17",
          "text": " @dev A simple mock ProxyRegistry for use in local tests with minimal security"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3313,
          3548,
          6173
        ],
        "name": "MockProxyRegistry",
        "nameLocation": "212:17:17",
        "scope": 3314,
        "usedErrors": [],
        "usedEvents": [
          3457
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 17
}