{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_optionId",
          "type": "uint256"
        }
      ],
      "name": "canMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lootBoxNftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_optionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_toAddress",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supportsFactoryInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_optionId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052602d608081815290620037d460a03960049062000022908262000292565b50606460055560036006556000600755600160085560026009556004600a553480156200004e57600080fd5b50604051620038013803806200380183398101604081905262000071916200037b565b6200007c3362000127565b600180546001600160a01b038085166001600160a01b031992831617909255600280549284169290911691909117905560405182903090620000be90620001e0565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620000f2573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b03928316179055600080546200011f921662000177565b5050620003db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b600654811015620001db5780826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480620001d281620003b3565b9150506200017a565b505050565b61250280620012d283390190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021957607f821691505b6020821081036200023a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001db57600081815260208120601f850160051c81016020861015620002695750805b601f850160051c820191505b818110156200028a5782815560010162000275565b505050505050565b81516001600160401b03811115620002ae57620002ae620001ee565b620002c681620002bf845462000204565b8462000240565b602080601f831160018114620002fe5760008415620002e55750858301515b600019600386901b1c1916600185901b1785556200028a565b600085815260208120601f198616915b828110156200032f578886015182559484019460019091019084016200030e565b50858210156200034e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200037657600080fd5b919050565b600080604083850312156200038f57600080fd5b6200039a836200035e565b9150620003aa602084016200035e565b90509250929050565b600060018201620003d457634e487b7160e01b600052601160045260246000fd5b5060010190565b610ee780620003eb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063c87b56dd11610071578063c87b56dd1461023c578063cd7c03261461024f578063e985e9c514610262578063ec07d02e14610275578063f2fde38b1461028857600080fd5b80638da5cb5b146101f257806394bf804d1461020357806395d89b4114610216578063c311c5231461023557600080fd5b80635dd871a3116100de5780635dd871a3146101ac5780636352211e146101cf5780636c0360eb146101e2578063715018a6146101ea57600080fd5b806306fdde031461011057806323b872dd1461015b5780634b97aed9146101705780635bf8633a14610181575b600080fd5b60408051808201909152601981527f4f70656e5365614372656174757265204974656d2053616c650000000000000060208201525b6040516101529190610b4d565b60405180910390f35b61016e610169366004610b95565b61029b565b005b600654604051908152602001610152565b600254610194906001600160a01b031681565b6040516001600160a01b039091168152602001610152565b6101bf6101ba366004610bd6565b6102aa565b6040519015158152602001610152565b6101946101dd366004610bd6565b6103ec565b610145610400565b61016e61048e565b6000546001600160a01b0316610194565b61016e610211366004610bef565b6104cd565b60408051808201909152600381526221a82360e91b6020820152610145565b60016101bf565b61014561024a366004610bd6565b61073b565b600154610194906001600160a01b031681565b6101bf610270366004610c1f565b61076f565b600354610194906001600160a01b031681565b61016e610296366004610c4d565b610888565b6102a581836104cd565b505050565b600060065482106102bd57506000919050565b600254604080516318160ddd60e01b815290516001600160a01b039092169160009183916318160ddd916004808201926020929091908290030181865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610c71565b905060006007548503610345575060016103d3565b60085485036103575750600a546103d3565b60095485036103d357600354604080516319d554e160e01b815290516001600160a01b039092169182916319d554e19160048083019260209291908290030181865afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610c71565b9150505b806005546103e19190610ca0565b909110949350505050565b600080546001600160a01b03165b92915050565b6004805461040d90610cb3565b80601f016020809104026020016040519081016040528092919081815260200182805461043990610cb3565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b505050505081565b6000546001600160a01b031633146104c15760405162461bcd60e51b81526004016104b890610ced565b60405180910390fd5b6104cb60006108d5565b565b6001546001600160a01b0316336001600160a01b0316816001600160a01b031663c45527916105046000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190610d22565b6001600160a01b0316148061058b57506000546001600160a01b031633145b806105a957506003546001600160a01b0316336001600160a01b0316145b6105b5576105b5610d3f565b6105be836102aa565b6105c757600080fd5b6002546007546001600160a01b0390911690840361063f5760405163755edd1760e01b81526001600160a01b03848116600483015282169063755edd1790602401600060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b50505050610735565b60085484036106c95760005b600a548110156106c35760405163755edd1760e01b81526001600160a01b03858116600483015283169063755edd1790602401600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b5050505080806106bb90610d55565b91505061064b565b50610735565b60095484036107355760035460405163755edd1760e01b81526001600160a01b03858116600483015290911690819063755edd1790602401600060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b50505050505b50505050565b6060600461074883610925565b604051602001610759929190610d8a565b6040516020818303038152906040529050919050565b6000826001600160a01b031661078d6000546001600160a01b031690565b6001600160a01b03161480156107b45750816001600160a01b0316836001600160a01b0316145b156107c1575060016103fa565b6001546001600160a01b039081169084166107e46000546001600160a01b031690565b6001600160a01b031614801561086f575060405163c455279160e01b81526001600160a01b038581166004830152808516919083169063c455279190602401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610d22565b6001600160a01b0316145b1561087e5760019150506103fa565b5060009392505050565b6000546001600160a01b031633146108b25760405162461bcd60e51b81526004016104b890610ced565b6000546001600160a01b03166108c782610a2e565b6108d18183610ac9565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60608160000361094c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610976578061096081610d55565b915061096f9050600a83610e4a565b9150610950565b60008167ffffffffffffffff81111561099157610991610e5e565b6040519080825280601f01601f1916602001820160405280156109bb576020820181803683370190505b5090505b8415610a26576109d0600183610ca0565b91506109dd600a86610e74565b6109e8906030610e88565b60f81b8183815181106109fd576109fd610e9b565b60200101906001600160f81b031916908160001a905350610a1f600a86610e4a565b94506109bf565b949350505050565b6000546001600160a01b03163314610a585760405162461bcd60e51b81526004016104b890610ced565b6001600160a01b038116610abd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b8565b610ac6816108d5565b50565b60005b6006548110156102a55780826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480610b2181610d55565b915050610acc565b60005b83811015610b44578181015183820152602001610b2c565b50506000910152565b6020815260008251806020840152610b6c816040850160208701610b29565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ac657600080fd5b600080600060608486031215610baa57600080fd5b8335610bb581610b80565b92506020840135610bc581610b80565b929592945050506040919091013590565b600060208284031215610be857600080fd5b5035919050565b60008060408385031215610c0257600080fd5b823591506020830135610c1481610b80565b809150509250929050565b60008060408385031215610c3257600080fd5b8235610c3d81610b80565b91506020830135610c1481610b80565b600060208284031215610c5f57600080fd5b8135610c6a81610b80565b9392505050565b600060208284031215610c8357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103fa576103fa610c8a565b600181811c90821680610cc757607f821691505b602082108103610ce757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610d3457600080fd5b8151610c6a81610b80565b634e487b7160e01b600052600160045260246000fd5b600060018201610d6757610d67610c8a565b5060010190565b60008151610d80818560208601610b29565b9290920192915050565b600080845481600182811c915080831680610da657607f831692505b60208084108203610dc557634e487b7160e01b86526022600452602486fd5b818015610dd95760018114610dee57610e1b565b60ff1986168952841515850289019650610e1b565b60008b81526020902060005b86811015610e135781548b820152908501908301610dfa565b505084890196505b505050505050610e2b8185610d6e565b95945050505050565b634e487b7160e01b600052601260045260246000fd5b600082610e5957610e59610e34565b500490565b634e487b7160e01b600052604160045260246000fd5b600082610e8357610e83610e34565b500690565b808201808211156103fa576103fa610c8a565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200b823978c6b618a810e7ccfcdb0f96983bc0962c2d7bc10b28f1823c0b2945f664736f6c6343000814003360806040526006805460ff191690556003600c556000600d553480156200002557600080fd5b506040516200250238038062002502833981016040819052620000489162000315565b6040518060400160405280600f81526020016e086e4cac2e8eae4ca98dedee884def608b1b815250604051806040016040528060078152602001660989e9ea8849eb60cb1b8152508382828160009081620000a49190620003f2565b506001620000b38282620003f2565b505050620000d0620000ca6200013160201b60201c565b62000142565b600b80546001600160a01b0319166001600160a01b038316179055620000fa600a80546001019055565b620001058362000194565b5050600e80546001600160a01b0319166001600160a01b03939093169290921790915550620004be9050565b60006200013d620001f8565b905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615620001dd5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481a5b9a5d195960921b604482015260640160405180910390fd5b620001e88162000256565b506006805460ff19166001179055565b60003033036200025057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620002539050565b50335b90565b6040518060800160405280604f8152602001620024b3604f9139805160209182012082519282019290922060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401523060808401524660a0808501919091528151808503909101815260c090930190528151910120600755565b80516001600160a01b03811681146200031057600080fd5b919050565b600080604083850312156200032957600080fd5b6200033483620002f8565b91506200034460208401620002f8565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200037857607f821691505b6020821081036200039957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ed57600081815260208120601f850160051c81016020861015620003c85750805b601f850160051c820191505b81811015620003e957828155600101620003d4565b5050505b505050565b81516001600160401b038111156200040e576200040e6200034d565b62000426816200041f845462000363565b846200039f565b602080601f8311600181146200045e5760008415620004455750858301515b600019600386901b1c1916600185901b178555620003e9565b600085815260208120601f198616915b828110156200048f578886015182559484019460019091019084016200046e565b5085821015620004ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611fe580620004ce6000396000f3fe6080604052600436106101815760003560e01c80636352211e116100d157806395d89b411161008a578063c87b56dd11610064578063c87b56dd14610455578063d547cfb714610475578063e985e9c51461048a578063f2fde38b146104aa57600080fd5b806395d89b4114610400578063a22cb46514610415578063b88d4fde1461043557600080fd5b80636352211e1461034d57806370a082311461036d578063715018a61461038d578063755edd17146103a25780638a02be68146103c25780638da5cb5b146103e257600080fd5b806318160ddd1161013e57806323b872dd1161011857806323b872dd146102c45780632d0335ab146102e45780633408e4701461031a57806342842e0e1461032d57600080fd5b806318160ddd1461027757806319d554e11461029a57806320379ee5146102af57600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b3146102155780630c53c51c146102375780630f7e59701461024a575b600080fd5b34801561019257600080fd5b506101a66101a1366004611929565b6104ca565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d061051c565b6040516101b29190611996565b3480156101e957600080fd5b506101fd6101f83660046119a9565b6105ae565b6040516001600160a01b0390911681526020016101b2565b34801561022157600080fd5b506102356102303660046119d7565b610648565b005b6101d0610245366004611aa6565b61076f565b34801561025657600080fd5b506101d0604051806040016040528060018152602001603160f81b81525081565b34801561028357600080fd5b5061028c610959565b6040519081526020016101b2565b3480156102a657600080fd5b50600c5461028c565b3480156102bb57600080fd5b5060075461028c565b3480156102d057600080fd5b506102356102df366004611b24565b610975565b3480156102f057600080fd5b5061028c6102ff366004611b65565b6001600160a01b031660009081526008602052604090205490565b34801561032657600080fd5b504661028c565b34801561033957600080fd5b50610235610348366004611b24565b6109ad565b34801561035957600080fd5b506101fd6103683660046119a9565b6109c8565b34801561037957600080fd5b5061028c610388366004611b65565b610a3f565b34801561039957600080fd5b50610235610ac6565b3480156103ae57600080fd5b506102356103bd366004611b65565b610b1b565b3480156103ce57600080fd5b506102356103dd3660046119a9565b610b8d565b3480156103ee57600080fd5b506009546001600160a01b03166101fd565b34801561040c57600080fd5b506101d0610c69565b34801561042157600080fd5b50610235610430366004611b82565b610c78565b34801561044157600080fd5b50610235610450366004611bc0565b610c8a565b34801561046157600080fd5b506101d06104703660046119a9565b610cc9565b34801561048157600080fd5b506101d0610d03565b34801561049657600080fd5b506101a66104a5366004611c2c565b610d23565b3480156104b657600080fd5b506102356104c5366004611b65565b610de3565b60006001600160e01b031982166380ac58cd60e01b14806104fb57506001600160e01b03198216635b5e139f60e01b145b8061051657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461052b90611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461055790611c5a565b80156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661062c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610653826109c8565b9050806001600160a01b0316836001600160a01b0316036106c05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610623565b806001600160a01b03166106d2610e9a565b6001600160a01b031614806106ee57506106ee816104a5610e9a565b6107605760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610623565b61076a8383610ea4565b505050565b60408051606081810183526001600160a01b038816600081815260086020908152908590205484528301529181018690526107ad8782878787610f12565b6108035760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610623565b6001600160a01b038716600090815260086020526040902054610827906001611002565b6001600160a01b0388166000908152600860205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061087790899033908a90611c94565b60405180910390a1600080306001600160a01b0316888a60405160200161089f929190611cc9565b60408051601f19818403018152908290526108b991611d00565b6000604051808303816000865af19150503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b50915091508161094d5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610623565b98975050505050505050565b60006001610966600a5490565b6109709190611d32565b905090565b610986610980610e9a565b82611015565b6109a25760405162461bcd60e51b815260040161062390611d45565b61076a8383836110e4565b61076a83838360405180602001604052806000815250610c8a565b6000818152600260205260408120546001600160a01b0316806105165760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610623565b60006001600160a01b038216610aaa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610623565b506001600160a01b031660009081526003602052604090205490565b610ace610e9a565b6001600160a01b0316610ae96009546001600160a01b031690565b6001600160a01b031614610b0f5760405162461bcd60e51b815260040161062390611d96565b610b196000611284565b565b610b23610e9a565b6001600160a01b0316610b3e6009546001600160a01b031690565b6001600160a01b031614610b645760405162461bcd60e51b815260040161062390611d96565b6000610b6f600a5490565b9050610b7f600a80546001019055565b610b8982826112d6565b5050565b610b95610e9a565b6001600160a01b0316610ba7826109c8565b6001600160a01b031614610bba57600080fd5b60005b600c54811015610c5c57600e54600d546001600160a01b039091169081906394bf804d90610be9610e9a565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b158015610c3057600080fd5b505af1158015610c44573d6000803e3d6000fd5b50505050508080610c5490611dcb565b915050610bbd565b50610c66816112f0565b50565b60606001805461052b90611c5a565b610b89610c83610e9a565b838361138b565b610c9b610c95610e9a565b83611015565b610cb75760405162461bcd60e51b815260040161062390611d45565b610cc384848484611459565b50505050565b6060610cd3610d03565b610cdc8361148c565b604051602001610ced929190611de4565b6040516020818303038152906040529050919050565b6060604051806060016040528060298152602001611f8760299139905090565b600b5460405163c455279160e01b81526001600160a01b03848116600483015260009281169190841690829063c455279190602401602060405180830381865afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d999190611e13565b6001600160a01b031603610db1576001915050610516565b6001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b949350505050565b610deb610e9a565b6001600160a01b0316610e066009546001600160a01b031690565b6001600160a01b031614610e2c5760405162461bcd60e51b815260040161062390611d96565b6001600160a01b038116610e915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610623565b610c6681611284565b600061097061158d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ed9826109c8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006001600160a01b038616610f785760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b6064820152608401610623565b6001610f8b610f86876115e9565b611666565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610fd9573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600061100e8284611e30565b9392505050565b6000818152600260205260408120546001600160a01b031661108e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610623565b6000611099836109c8565b9050806001600160a01b0316846001600160a01b031614806110d45750836001600160a01b03166110c9846105ae565b6001600160a01b0316145b80610ddb5750610ddb8185610d23565b826001600160a01b03166110f7826109c8565b6001600160a01b03161461115f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610623565b6001600160a01b0382166111c15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610623565b6111cc600082610ea4565b6001600160a01b03831660009081526003602052604081208054600192906111f5908490611d32565b90915550506001600160a01b0382166000908152600360205260408120805460019290611223908490611e30565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610b89828260405180602001604052806000815250611696565b60006112fb826109c8565b9050611308600083610ea4565b6001600160a01b0381166000908152600360205260408120805460019290611331908490611d32565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b0316036113ec5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610623565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114648484846110e4565b611470848484846116c9565b610cc35760405162461bcd60e51b815260040161062390611e43565b6060816000036114b35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114dd57806114c781611dcb565b91506114d69050600a83611eab565b91506114b7565b60008167ffffffffffffffff8111156114f8576114f8611a03565b6040519080825280601f01601f191660200182016040528015611522576020820181803683370190505b5090505b8415610ddb57611537600183611d32565b9150611544600a86611ebf565b61154f906030611e30565b60f81b81838151811061156457611564611ed3565b60200101906001600160f81b031916908160001a905350611586600a86611eab565b9450611526565b60003033036115e357600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506115e69050565b50335b90565b6000604051806080016040528060438152602001611f446043913980516020918201208351848301516040808701518051908601209051611649950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b600061167160075490565b60405161190160f01b6020820152602281019190915260428101839052606201611649565b6116a083836117d1565b6116ad60008484846116c9565b61076a5760405162461bcd60e51b815260040161062390611e43565b60006001600160a01b0384163b156117c657836001600160a01b031663150b7a026116f2610e9a565b8786866040518563ffffffff1660e01b81526004016117149493929190611ee9565b6020604051808303816000875af192505050801561174f575060408051601f3d908101601f1916820190925261174c91810190611f26565b60015b6117ac573d80801561177d576040519150601f19603f3d011682016040523d82523d6000602084013e611782565b606091505b5080516000036117a45760405162461bcd60e51b815260040161062390611e43565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ddb565b506001949350505050565b6001600160a01b0382166118275760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610623565b6000818152600260205260409020546001600160a01b03161561188c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610623565b6001600160a01b03821660009081526003602052604081208054600192906118b5908490611e30565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c6657600080fd5b60006020828403121561193b57600080fd5b813561100e81611913565b60005b83811015611961578181015183820152602001611949565b50506000910152565b60008151808452611982816020860160208601611946565b601f01601f19169290920160200192915050565b60208152600061100e602083018461196a565b6000602082840312156119bb57600080fd5b5035919050565b6001600160a01b0381168114610c6657600080fd5b600080604083850312156119ea57600080fd5b82356119f5816119c2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a2a57600080fd5b813567ffffffffffffffff80821115611a4557611a45611a03565b604051601f8301601f19908116603f01168101908282118183101715611a6d57611a6d611a03565b81604052838152866020858801011115611a8657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215611abe57600080fd5b8535611ac9816119c2565b9450602086013567ffffffffffffffff811115611ae557600080fd5b611af188828901611a19565b9450506040860135925060608601359150608086013560ff81168114611b1657600080fd5b809150509295509295909350565b600080600060608486031215611b3957600080fd5b8335611b44816119c2565b92506020840135611b54816119c2565b929592945050506040919091013590565b600060208284031215611b7757600080fd5b813561100e816119c2565b60008060408385031215611b9557600080fd5b8235611ba0816119c2565b915060208301358015158114611bb557600080fd5b809150509250929050565b60008060008060808587031215611bd657600080fd5b8435611be1816119c2565b93506020850135611bf1816119c2565b925060408501359150606085013567ffffffffffffffff811115611c1457600080fd5b611c2087828801611a19565b91505092959194509250565b60008060408385031215611c3f57600080fd5b8235611c4a816119c2565b91506020830135611bb5816119c2565b600181811c90821680611c6e57607f821691505b602082108103611c8e57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03848116825283166020820152606060408201819052600090611cc09083018461196a565b95945050505050565b60008351611cdb818460208801611946565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008251611d12818460208701611946565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561051657610516611d1c565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201611ddd57611ddd611d1c565b5060010190565b60008351611df6818460208801611946565b835190830190611e0a818360208801611946565b01949350505050565b600060208284031215611e2557600080fd5b815161100e816119c2565b8082018082111561051657610516611d1c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611eba57611eba611e95565b500490565b600082611ece57611ece611e95565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f1c9083018461196a565b9695505050505050565b600060208284031215611f3857600080fd5b815161100e8161191356fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e61747572652968747470733a2f2f6372656174757265732d6170692e6f70656e7365612e696f2f6170692f626f782fa2646970667358221220625751eae7b647f32039cc9628d091a7db653bccc9e26db2f7072c74a289ce0264736f6c63430008140033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c742968747470733a2f2f6372656174757265732d6170692e6f70656e7365612e696f2f6170692f666163746f72792f",
    "sourceMap": "568:71:4:-:0;252:5335;568:71;;252:5335;568:71;;;252:5335;568:71;;;;;;;;;:::i;:::-;;747:3;721:29;;875:1;853:23;;915:1;882:34;;957:1;922:36;;989:1;964:26;;1048:1;996:53;;1056:327;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:19;719:10:30;921:18:19;:32::i;:::-;1130:20:4;:44;;-1:-1:-1;;;;;1130:44:4;;;-1:-1:-1;;;;;;1130:44:4;;;;;;;1184:10;:24;;;;;;;;;;;;;;;1259:57;;1153:21;;1310:4;;1259:57;;;:::i;:::-;-1:-1:-1;;;;;3445:15:36;;;3427:34;;3497:15;;3492:2;3477:18;;3470:43;3377:2;3362:18;1259:57:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1218:17:4;:108;;-1:-1:-1;;;;;;1218:108:4;-1:-1:-1;;;;;1218:108:4;;;;;;-1:-1:-1;1108:6:19;;1337:39:4;;1108:6:19;1337:18:4;:39::i;:::-;1056:327;;252:5335;;2270:187:19;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;2032:175:4:-;2111:9;2106:95;2130:11;;2126:1;:15;2106:95;;;2188:1;2183:3;-1:-1:-1;;;;;2167:23:4;2176:5;-1:-1:-1;;;;;2167:23:4;;;;;;;;;;;2143:3;;;;:::i;:::-;;;;2106:95;;;;2032:175;;:::o;252:5335::-;;;;;;;;:::o;14:127:36:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:36;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:36;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:36;;;2580:26;2531:89;-1:-1:-1;;1335:1:36;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:36;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:36;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:36;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:36:o;2735:177::-;2814:13;;-1:-1:-1;;;;;2856:31:36;;2846:42;;2836:70;;2902:1;2899;2892:12;2836:70;2735:177;;;:::o;2917:293::-;2996:6;3004;3057:2;3045:9;3036:7;3032:23;3028:32;3025:52;;;3073:1;3070;3063:12;3025:52;3096:40;3126:9;3096:40;:::i;:::-;3086:50;;3155:49;3200:2;3189:9;3185:18;3155:49;:::i;:::-;3145:59;;2917:293;;;;;:::o;3524:232::-;3563:3;3584:17;;;3581:140;;3643:10;3638:3;3634:20;3631:1;3624:31;3678:4;3675:1;3668:15;3706:4;3703:1;3696:15;3581:140;-1:-1:-1;3748:1:36;3737:13;;3524:232::o;:::-;252:5335:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063c87b56dd11610071578063c87b56dd1461023c578063cd7c03261461024f578063e985e9c514610262578063ec07d02e14610275578063f2fde38b1461028857600080fd5b80638da5cb5b146101f257806394bf804d1461020357806395d89b4114610216578063c311c5231461023557600080fd5b80635dd871a3116100de5780635dd871a3146101ac5780636352211e146101cf5780636c0360eb146101e2578063715018a6146101ea57600080fd5b806306fdde031461011057806323b872dd1461015b5780634b97aed9146101705780635bf8633a14610181575b600080fd5b60408051808201909152601981527f4f70656e5365614372656174757265204974656d2053616c650000000000000060208201525b6040516101529190610b4d565b60405180910390f35b61016e610169366004610b95565b61029b565b005b600654604051908152602001610152565b600254610194906001600160a01b031681565b6040516001600160a01b039091168152602001610152565b6101bf6101ba366004610bd6565b6102aa565b6040519015158152602001610152565b6101946101dd366004610bd6565b6103ec565b610145610400565b61016e61048e565b6000546001600160a01b0316610194565b61016e610211366004610bef565b6104cd565b60408051808201909152600381526221a82360e91b6020820152610145565b60016101bf565b61014561024a366004610bd6565b61073b565b600154610194906001600160a01b031681565b6101bf610270366004610c1f565b61076f565b600354610194906001600160a01b031681565b61016e610296366004610c4d565b610888565b6102a581836104cd565b505050565b600060065482106102bd57506000919050565b600254604080516318160ddd60e01b815290516001600160a01b039092169160009183916318160ddd916004808201926020929091908290030181865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610c71565b905060006007548503610345575060016103d3565b60085485036103575750600a546103d3565b60095485036103d357600354604080516319d554e160e01b815290516001600160a01b039092169182916319d554e19160048083019260209291908290030181865afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610c71565b9150505b806005546103e19190610ca0565b909110949350505050565b600080546001600160a01b03165b92915050565b6004805461040d90610cb3565b80601f016020809104026020016040519081016040528092919081815260200182805461043990610cb3565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b505050505081565b6000546001600160a01b031633146104c15760405162461bcd60e51b81526004016104b890610ced565b60405180910390fd5b6104cb60006108d5565b565b6001546001600160a01b0316336001600160a01b0316816001600160a01b031663c45527916105046000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190610d22565b6001600160a01b0316148061058b57506000546001600160a01b031633145b806105a957506003546001600160a01b0316336001600160a01b0316145b6105b5576105b5610d3f565b6105be836102aa565b6105c757600080fd5b6002546007546001600160a01b0390911690840361063f5760405163755edd1760e01b81526001600160a01b03848116600483015282169063755edd1790602401600060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b50505050610735565b60085484036106c95760005b600a548110156106c35760405163755edd1760e01b81526001600160a01b03858116600483015283169063755edd1790602401600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b5050505080806106bb90610d55565b91505061064b565b50610735565b60095484036107355760035460405163755edd1760e01b81526001600160a01b03858116600483015290911690819063755edd1790602401600060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b50505050505b50505050565b6060600461074883610925565b604051602001610759929190610d8a565b6040516020818303038152906040529050919050565b6000826001600160a01b031661078d6000546001600160a01b031690565b6001600160a01b03161480156107b45750816001600160a01b0316836001600160a01b0316145b156107c1575060016103fa565b6001546001600160a01b039081169084166107e46000546001600160a01b031690565b6001600160a01b031614801561086f575060405163c455279160e01b81526001600160a01b038581166004830152808516919083169063c455279190602401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610d22565b6001600160a01b0316145b1561087e5760019150506103fa565b5060009392505050565b6000546001600160a01b031633146108b25760405162461bcd60e51b81526004016104b890610ced565b6000546001600160a01b03166108c782610a2e565b6108d18183610ac9565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60608160000361094c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610976578061096081610d55565b915061096f9050600a83610e4a565b9150610950565b60008167ffffffffffffffff81111561099157610991610e5e565b6040519080825280601f01601f1916602001820160405280156109bb576020820181803683370190505b5090505b8415610a26576109d0600183610ca0565b91506109dd600a86610e74565b6109e8906030610e88565b60f81b8183815181106109fd576109fd610e9b565b60200101906001600160f81b031916908160001a905350610a1f600a86610e4a565b94506109bf565b949350505050565b6000546001600160a01b03163314610a585760405162461bcd60e51b81526004016104b890610ced565b6001600160a01b038116610abd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b8565b610ac6816108d5565b50565b60005b6006548110156102a55780826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480610b2181610d55565b915050610acc565b60005b83811015610b44578181015183820152602001610b2c565b50506000910152565b6020815260008251806020840152610b6c816040850160208701610b29565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ac657600080fd5b600080600060608486031215610baa57600080fd5b8335610bb581610b80565b92506020840135610bc581610b80565b929592945050506040919091013590565b600060208284031215610be857600080fd5b5035919050565b60008060408385031215610c0257600080fd5b823591506020830135610c1481610b80565b809150509250929050565b60008060408385031215610c3257600080fd5b8235610c3d81610b80565b91506020830135610c1481610b80565b600060208284031215610c5f57600080fd5b8135610c6a81610b80565b9392505050565b600060208284031215610c8357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103fa576103fa610c8a565b600181811c90821680610cc757607f821691505b602082108103610ce757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610d3457600080fd5b8151610c6a81610b80565b634e487b7160e01b600052600160045260246000fd5b600060018201610d6757610d67610c8a565b5060010190565b60008151610d80818560208601610b29565b9290920192915050565b600080845481600182811c915080831680610da657607f831692505b60208084108203610dc557634e487b7160e01b86526022600452602486fd5b818015610dd95760018114610dee57610e1b565b60ff1986168952841515850289019650610e1b565b60008b81526020902060005b86811015610e135781548b820152908501908301610dfa565b505084890196505b505050505050610e2b8185610d6e565b95945050505050565b634e487b7160e01b600052601260045260246000fd5b600082610e5957610e59610e34565b500490565b634e487b7160e01b600052604160045260246000fd5b600082610e8357610e83610e34565b500690565b808201808211156103fa576103fa610c8a565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200b823978c6b618a810e7ccfcdb0f96983bc0962c2d7bc10b28f1823c0b2945f664736f6c63430008140033",
    "sourceMap": "252:5335:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:114;1462:34;;;;;;;;;;;;;;;;;1389:114;;;;;;;:::i;:::-;;;;;;;;4530:135;;;;;;:::i;:::-;;:::i;:::-;;1715:96;1793:11;;1715:96;;1413:25:36;;;1401:2;1386:18;1715:96:4;1267:177:36;499:25:4;;;;;-1:-1:-1;;;;;499:25:4;;;;;;-1:-1:-1;;;;;1613:32:36;;;1595:51;;1583:2;1568:18;499:25:4;1449:203:36;3318:862:4;;;;;;:::i;:::-;;:::i;:::-;;;2007:14:36;;2000:22;1982:41;;1970:2;1955:18;3318:862:4;1842:187:36;5491:94:4;;;;;;:::i;:::-;;:::i;568:71::-;;;:::i;1668:101:19:-;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;1036:85;;2213:1099:4;;;;;;:::i;:::-;;:::i;1509:94::-;1584:12;;;;;;;;;;;;-1:-1:-1;;;1584:12:4;;;;1509:94;;1609:100;1698:4;1609:100;;4186:170;;;;;;:::i;:::-;;:::i;458:35::-;;;;;-1:-1:-1;;;;;458:35:4;;;4843:470;;;;;;:::i;:::-;;:::i;530:32::-;;;;;-1:-1:-1;;;;;530:32:4;;;1817:209;;;;;;:::i;:::-;;:::i;4530:135::-;4639:19;4644:8;4654:3;4639:4;:19::i;:::-;4530:135;;;:::o;3318:862::-;3384:4;3417:11;;3404:9;:24;3400:67;;-1:-1:-1;3451:5:4;;3318:862;-1:-1:-1;3318:862:4:o;3400:67::-;3513:10;;3559:29;;;-1:-1:-1;;;3559:29:4;;;;-1:-1:-1;;;;;3513:10:4;;;;3477:24;;3513:10;;3559:27;;:29;;;;;;;;;;;;;;;3513:10;3559:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3534:54;;3599:25;3655:22;;3642:9;:35;3638:465;;-1:-1:-1;3713:1:4;3638:465;;;3748:24;;3735:9;:37;3731:372;;-1:-1:-1;3808:41:4;;3731:372;;;3883:14;;3870:9;:27;3866:237;;3987:17;;4052:40;;;-1:-1:-1;;;4052:40:4;;;;-1:-1:-1;;;;;3987:17:4;;;;;;4052:38;;:40;;;;;;;;;;;;;;3987:17;4052:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4032:60;;3899:204;3866:237;4155:17;4137:15;;:35;;;;:::i;:::-;4119:54;;;;3318:862;-1:-1:-1;;;;3318:862:4:o;5491:94::-;5538:14;1108:6:19;;-1:-1:-1;;;;;1108:6:19;5571:7:4;5564:14;5491:94;-1:-1:-1;;5491:94:4:o;568:71::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2213:1099:4:-;2391:20;;-1:-1:-1;;;;;2391:20:4;719:10:30;-1:-1:-1;;;;;2442:55:4;2450:13;-1:-1:-1;;;;;2450:21:4;;2472:7;1082::19;1108:6;-1:-1:-1;;;;;1108:6:19;;1036:85;2472:7:4;2450:30;;-1:-1:-1;;;;;;2450:30:4;;;;;;;-1:-1:-1;;;;;1613:32:36;;;2450:30:4;;;1595:51:36;1568:18;;2450:30:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2442:55:4;;:98;;;-1:-1:-1;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;2517:23:4;2442:98;:151;;;-1:-1:-1;2576:17:4;;-1:-1:-1;;;;;2576:17:4;719:10:30;-1:-1:-1;;;;;2560:33:4;;2442:151;2422:181;;;;:::i;:::-;2621:18;2629:9;2621:7;:18::i;:::-;2613:27;;;;;;2687:10;;2725:22;;-1:-1:-1;;;;;2687:10:4;;;;2712:35;;2708:598;;2763:34;;-1:-1:-1;;;2763:34:4;;-1:-1:-1;;;;;1613:32:36;;;2763:34:4;;;1595:51:36;2763:22:4;;;;;1568:18:36;;2763:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:598;;;2831:24;;2818:9;:37;2814:492;;2893:9;2871:201;2928:41;;2924:1;:45;2871:201;;;3023:34;;-1:-1:-1;;;3023:34:4;;-1:-1:-1;;;;;1613:32:36;;;3023:34:4;;;1595:51:36;3023:22:4;;;;;1568:18:36;;3023:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2987:3;;;;;:::i;:::-;;;;2871:201;;;;2814:492;;;3105:14;;3092:9;:27;3088:218;;3209:17;;3254:41;;-1:-1:-1;;;3254:41:4;;-1:-1:-1;;;;;1613:32:36;;;3254:41:4;;;1595:51:36;3209:17:4;;;;;;3254:29;;1568:18:36;;3254:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:185;3088:218;2282:1030;;2213:1099;;:::o;4186:170::-;4255:13;4311:7;4320:27;4337:9;4320:16;:27::i;:::-;4294:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4280:69;;4186:170;;;:::o;4843:470::-;4949:4;4984:6;-1:-1:-1;;;;;4973:17:4;:7;1082::19;1108:6;-1:-1:-1;;;;;1108:6:19;;1036:85;4973:7:4;-1:-1:-1;;;;;4973:17:4;;:40;;;;;5004:9;-1:-1:-1;;;;;4994:19:4;:6;-1:-1:-1;;;;;4994:19:4;;4973:40;4969:82;;;-1:-1:-1;5036:4:4;5029:11;;4969:82;5105:20;;-1:-1:-1;;;;;5105:20:4;;;;5153:17;;:7;1082::19;1108:6;-1:-1:-1;;;;;1108:6:19;;1036:85;5153:7:4;-1:-1:-1;;;;;5153:17:4;;:84;;;;-1:-1:-1;5194:29:4;;-1:-1:-1;;;5194:29:4;;-1:-1:-1;;;;;1613:32:36;;;5194:29:4;;;1595:51:36;5186::4;;;;5194:21;;;;;;1568:18:36;;5194:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5186:51:4;;5153:84;5136:148;;;5269:4;5262:11;;;;;5136:148;-1:-1:-1;5301:5:4;;4843:470;-1:-1:-1;;;4843:470:4:o;1817:209::-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;1898:18:4::1;1108:6:19::0;-1:-1:-1;;;;;1108:6:19;1936:33:4::1;1960:8:::0;1936:23:::1;:33::i;:::-;1979:40;1998:10;2010:8;1979:18;:40::i;:::-;1888:138;1817:209:::0;:::o;2270:187:19:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;328:703:32:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:32;;;;;;;;;;;;-1:-1:-1;;;627:10:32;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:32;;-1:-1:-1;773:2:32;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:32;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:32;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:32;;;;;;;;-1:-1:-1;972:11:32;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:32:o;1918:198:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:30;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:19;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:19;;7263:2:36;1998:73:19::1;::::0;::::1;7245:21:36::0;7302:2;7282:18;;;7275:30;7341:34;7321:18;;;7314:62;-1:-1:-1;;;7392:18:36;;;7385:36;7438:19;;1998:73:19::1;7061:402:36::0;1998:73:19::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2032:175:4:-;2111:9;2106:95;2130:11;;2126:1;:15;2106:95;;;2188:1;2183:3;-1:-1:-1;;;;;2167:23:4;2176:5;-1:-1:-1;;;;;2167:23:4;;;;;;;;;;;2143:3;;;;:::i;:::-;;;;2106:95;;14:250:36;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:36;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:36;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:36:o;670:131::-;-1:-1:-1;;;;;745:31:36;;735:42;;725:70;;791:1;788;781:12;806:456;883:6;891;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;1007:9;994:23;1026:31;1051:5;1026:31;:::i;:::-;1076:5;-1:-1:-1;1133:2:36;1118:18;;1105:32;1146:33;1105:32;1146:33;:::i;:::-;806:456;;1198:7;;-1:-1:-1;;;1252:2:36;1237:18;;;;1224:32;;806:456::o;1657:180::-;1716:6;1769:2;1757:9;1748:7;1744:23;1740:32;1737:52;;;1785:1;1782;1775:12;1737:52;-1:-1:-1;1808:23:36;;1657:180;-1:-1:-1;1657:180:36:o;2034:315::-;2102:6;2110;2163:2;2151:9;2142:7;2138:23;2134:32;2131:52;;;2179:1;2176;2169:12;2131:52;2215:9;2202:23;2192:33;;2275:2;2264:9;2260:18;2247:32;2288:31;2313:5;2288:31;:::i;:::-;2338:5;2328:15;;;2034:315;;;;;:::o;2354:388::-;2422:6;2430;2483:2;2471:9;2462:7;2458:23;2454:32;2451:52;;;2499:1;2496;2489:12;2451:52;2538:9;2525:23;2557:31;2582:5;2557:31;:::i;:::-;2607:5;-1:-1:-1;2664:2:36;2649:18;;2636:32;2677:33;2636:32;2677:33;:::i;2747:247::-;2806:6;2859:2;2847:9;2838:7;2834:23;2830:32;2827:52;;;2875:1;2872;2865:12;2827:52;2914:9;2901:23;2933:31;2958:5;2933:31;:::i;:::-;2983:5;2747:247;-1:-1:-1;;;2747:247:36:o;2999:184::-;3069:6;3122:2;3110:9;3101:7;3097:23;3093:32;3090:52;;;3138:1;3135;3128:12;3090:52;-1:-1:-1;3161:16:36;;2999:184;-1:-1:-1;2999:184:36:o;3188:127::-;3249:10;3244:3;3240:20;3237:1;3230:31;3280:4;3277:1;3270:15;3304:4;3301:1;3294:15;3320:128;3387:9;;;3408:11;;;3405:37;;;3422:18;;:::i;3453:380::-;3532:1;3528:12;;;;3575;;;3596:61;;3650:4;3642:6;3638:17;3628:27;;3596:61;3703:2;3695:6;3692:14;3672:18;3669:38;3666:161;;3749:10;3744:3;3740:20;3737:1;3730:31;3784:4;3781:1;3774:15;3812:4;3809:1;3802:15;3666:161;;3453:380;;;:::o;3838:356::-;4040:2;4022:21;;;4059:18;;;4052:30;4118:34;4113:2;4098:18;;4091:62;4185:2;4170:18;;3838:356::o;4199:280::-;4298:6;4351:2;4339:9;4330:7;4326:23;4322:32;4319:52;;;4367:1;4364;4357:12;4319:52;4399:9;4393:16;4418:31;4443:5;4418:31;:::i;4484:127::-;4545:10;4540:3;4536:20;4533:1;4526:31;4576:4;4573:1;4566:15;4600:4;4597:1;4590:15;4616:135;4655:3;4676:17;;;4673:43;;4696:18;;:::i;:::-;-1:-1:-1;4743:1:36;4732:13;;4616:135::o;4882:198::-;4924:3;4962:5;4956:12;4977:65;5035:6;5030:3;5023:4;5016:5;5012:16;4977:65;:::i;:::-;5058:16;;;;;4882:198;-1:-1:-1;;4882:198:36:o;5085:1203::-;5261:3;5290:1;5323:6;5317:13;5353:3;5375:1;5403:9;5399:2;5395:18;5385:28;;5463:2;5452:9;5448:18;5485;5475:61;;5529:4;5521:6;5517:17;5507:27;;5475:61;5555:2;5603;5595:6;5592:14;5572:18;5569:38;5566:165;;-1:-1:-1;;;5630:33:36;;5686:4;5683:1;5676:15;5716:4;5637:3;5704:17;5566:165;5747:18;5774:133;;;;5921:1;5916:320;;;;5740:496;;5774:133;-1:-1:-1;;5807:24:36;;5795:37;;5880:14;;5873:22;5861:35;;5852:45;;;-1:-1:-1;5774:133:36;;5916:320;4829:1;4822:14;;;4866:4;4853:18;;6011:1;6025:165;6039:6;6036:1;6033:13;6025:165;;;6117:14;;6104:11;;;6097:35;6160:16;;;;6054:10;;6025:165;;;6029:3;;6219:6;6214:3;6210:16;6203:23;;5740:496;;;;;;;6252:30;6278:3;6270:6;6252:30;:::i;:::-;6245:37;5085:1203;-1:-1:-1;;;;;5085:1203:36:o;6293:127::-;6354:10;6349:3;6345:20;6342:1;6335:31;6385:4;6382:1;6375:15;6409:4;6406:1;6399:15;6425:120;6465:1;6491;6481:35;;6496:18;;:::i;:::-;-1:-1:-1;6530:9:36;;6425:120::o;6550:127::-;6611:10;6606:3;6602:20;6599:1;6592:31;6642:4;6639:1;6632:15;6666:4;6663:1;6656:15;6682:112;6714:1;6740;6730:35;;6745:18;;:::i;:::-;-1:-1:-1;6779:9:36;;6682:112::o;6799:125::-;6864:9;;;6885:10;;;6882:36;;;6898:18;;:::i;6929:127::-;6990:10;6985:3;6981:20;6978:1;6971:31;7021:4;7018:1;7011:15;7045:4;7042:1;7035:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "baseURI()": "6c0360eb",
    "canMint(uint256)": "5dd871a3",
    "isApprovedForAll(address,address)": "e985e9c5",
    "lootBoxNftAddress()": "ec07d02e",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "nftAddress()": "5bf8633a",
    "numOptions()": "4b97aed9",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "proxyRegistryAddress()": "cd7c0326",
    "renounceOwnership()": "715018a6",
    "supportsFactoryInterface()": "c311c523",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lootBoxNftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportsFactoryInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canMint(uint256)\":{\"details\":\"Returns whether the option ID can be minted. Can return false if the developer wishes to restrict a total supply per option ID (or overall).\"},\"mint(uint256,address)\":{\"details\":\"Mints asset(s) in accordance to a specific address with a particular \\\"option\\\". This should be callable only by the contract owner or the owner's Wyvern Proxy (later universal login will solve this). Options should also be delineated 0 - (numOptions() - 1) for convenient indexing.\",\"params\":{\"_optionId\":\"the option id\",\"_toAddress\":\"address of the future owner of the asset(s)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenURI(uint256)\":{\"details\":\"Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC721 metadata.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names.\"},\"name()\":{\"notice\":\"Returns the name of this factory.\"},\"numOptions()\":{\"notice\":\"Number of options the factory supports.\"},\"ownerOf(uint256)\":{\"notice\":\"Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names.\"},\"supportsFactoryInterface()\":{\"notice\":\"Indicates that this is a factory contract. Ideally would use EIP 165 supportsInterface()\"},\"symbol()\":{\"notice\":\"Returns the symbol for this factory.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Hack to get things to work automatically on OpenSea. Use transferFrom so the frontend doesn't have to worry about different method names.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CreatureFactory.sol\":\"CreatureFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidity-parser/=node_modules/truffle-flattener/node_modules/@solidity-parser/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":truffle/=node_modules/truffle/\",\":wyvern-js/=node_modules/wyvern-js/\"]},\"sources\":{\"contracts/Creature.sol\":{\"keccak256\":\"0x5eef9df0592fbf63064ac5a061790bb4e754e9a432801ecd5e4da4390166c266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2d7d2f3d970630e8f981775f8c1589087f87741d0df48c38bc475da0c348c1a\",\"dweb:/ipfs/QmUMFY4zVkFWBXGHNKSquQriFZAaRyMp1Ji1qwk3CGb3e8\"]},\"contracts/CreatureFactory.sol\":{\"keccak256\":\"0x121f23c9fdf025c02eeefc68e3763de57f28383ff3fd1aaff46c110af989c301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026b43c66e85a7fdc8d2402c6ef3ea95ef4a5896885b4ccb5857586ecb725cfe\",\"dweb:/ipfs/QmXz6bBKb4Q25KGxutkqTY3XofH8DCLo2TFFHNpGAZBJPM\"]},\"contracts/CreatureLootBox.sol\":{\"keccak256\":\"0xe793705cf9caa79b39a546a7240423c1454a3a10fbc05b444a0721ef2a584f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fba69bcf5e335c4362edc4541ebbab669b77f6dc952333d5e7268edbf4975974\",\"dweb:/ipfs/QmcCjRdgLSkgRkxnYBb3QWTarabWzvSqQKCmLctRNtD6mx\"]},\"contracts/ERC721Tradable.sol\":{\"keccak256\":\"0x8fd4f36944967e6d1081f116e06542ccba50dcde4dd5d8acf498bb5a71eb4e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b051dab56bf82fe306a45cb486656234f940e066ae7b5ab37f326bf3c643afd3\",\"dweb:/ipfs/QmfPLsTyRzrKKDQrERocr5H5gHgXWpEGYat7pPGjKTY4Dt\"]},\"contracts/IFactoryERC721.sol\":{\"keccak256\":\"0x2ea4cc5c73c77d2d2319f7c04ebd42b50c8a52457e81b20b0f5be9c5aae63ea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de8631be9163bccbd5c80a6ce77c1bc57660d434c813d7a5eab7b939afe0506b\",\"dweb:/ipfs/QmVr1amUYc47Z7rsYuLTgdbxBK55PGSeaK2AMLKneXxVaq\"]},\"contracts/common/meta-transactions/ContentMixin.sol\":{\"keccak256\":\"0x92409bc8d2c1be83e14de02f07d791230699dee7abb70f3b7eff2425b8cc929c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dd37a1a5b74c26cbe341ae45e688afad30e86d4edfc20d296c59390f22d67b5\",\"dweb:/ipfs/QmWkQotAas3H2Z7e5Y4bL33Paa5t4fwcNMLLM67EowZQtZ\"]},\"contracts/common/meta-transactions/EIP712Base.sol\":{\"keccak256\":\"0x40e64dca9e20cd12e88efe58a2bc2f41051325dd4896b5454bad6cfe53a969ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9979a678076f6937bcf732d916b0282e5e2d3cb7b1a3322a012a63f6f69aad99\",\"dweb:/ipfs/QmchJfxLDHWtBgb2YfMBWgniCiHivat96kDi3qQikvJEMQ\"]},\"contracts/common/meta-transactions/Initializable.sol\":{\"keccak256\":\"0x397d4aa8cc6e019c7ed4e32e92db0935d6fdede224d5c6ae09136309eef15cde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13460611492b8292c442cfdb24c27fa255a1a3acbf98430f3b2eb61a92c46c9f\",\"dweb:/ipfs/QmVK8kB1jkfgAM2fYXeRywBo5SV8uSpttQ3nLNMrdygmxn\"]},\"contracts/common/meta-transactions/NativeMetaTransaction.sol\":{\"keccak256\":\"0x3cd9f941ba4d057738d8ba5798c5a57ea2893ebb778fea50bb9e282b2d3315f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77592d2882edc0e5e99344e7c521b9eda883e6f0578061bebbae4777be9fbdf8\",\"dweb:/ipfs/QmXtbiaBqoitNW63EQbiwkHQEJ8geJjR7wu1QJWhRUYKeT\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38\",\"dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56\",\"dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x74f630d2664c1581a1cbd0730d4ba119b3a184ef90c65f3a934be4d16d0e58a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadad0b133129f946a53e0f61fa387803ccdc010d9c794da0738bb7fc5001b66\",\"dweb:/ipfs/QmQdTBpUT9WgDuCm7womDFiAnksepw6Fmi5Z5vv1H17Qr1\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132\",\"dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proxyRegistryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_optionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lootBoxNftAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_optionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_toAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numOptions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxyRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsFactoryInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_optionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "canMint(uint256)": {
            "details": "Returns whether the option ID can be minted. Can return false if the developer wishes to restrict a total supply per option ID (or overall)."
          },
          "mint(uint256,address)": {
            "details": "Mints asset(s) in accordance to a specific address with a particular \"option\". This should be callable only by the contract owner or the owner's Wyvern Proxy (later universal login will solve this). Options should also be delineated 0 - (numOptions() - 1) for convenient indexing.",
            "params": {
              "_optionId": "the option id",
              "_toAddress": "address of the future owner of the asset(s)"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "tokenURI(uint256)": {
            "details": "Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC721 metadata."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isApprovedForAll(address,address)": {
            "notice": "Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names."
          },
          "name()": {
            "notice": "Returns the name of this factory."
          },
          "numOptions()": {
            "notice": "Number of options the factory supports."
          },
          "ownerOf(uint256)": {
            "notice": "Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names."
          },
          "supportsFactoryInterface()": {
            "notice": "Indicates that this is a factory contract. Ideally would use EIP 165 supportsInterface()"
          },
          "symbol()": {
            "notice": "Returns the symbol for this factory."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Hack to get things to work automatically on OpenSea. Use transferFrom so the frontend doesn't have to worry about different method names."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidity-parser/=node_modules/truffle-flattener/node_modules/@solidity-parser/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":truffle/=node_modules/truffle/",
        ":wyvern-js/=node_modules/wyvern-js/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/CreatureFactory.sol": "CreatureFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Creature.sol": {
        "keccak256": "0x5eef9df0592fbf63064ac5a061790bb4e754e9a432801ecd5e4da4390166c266",
        "urls": [
          "bzz-raw://b2d7d2f3d970630e8f981775f8c1589087f87741d0df48c38bc475da0c348c1a",
          "dweb:/ipfs/QmUMFY4zVkFWBXGHNKSquQriFZAaRyMp1Ji1qwk3CGb3e8"
        ],
        "license": "MIT"
      },
      "contracts/CreatureFactory.sol": {
        "keccak256": "0x121f23c9fdf025c02eeefc68e3763de57f28383ff3fd1aaff46c110af989c301",
        "urls": [
          "bzz-raw://026b43c66e85a7fdc8d2402c6ef3ea95ef4a5896885b4ccb5857586ecb725cfe",
          "dweb:/ipfs/QmXz6bBKb4Q25KGxutkqTY3XofH8DCLo2TFFHNpGAZBJPM"
        ],
        "license": "MIT"
      },
      "contracts/CreatureLootBox.sol": {
        "keccak256": "0xe793705cf9caa79b39a546a7240423c1454a3a10fbc05b444a0721ef2a584f01",
        "urls": [
          "bzz-raw://fba69bcf5e335c4362edc4541ebbab669b77f6dc952333d5e7268edbf4975974",
          "dweb:/ipfs/QmcCjRdgLSkgRkxnYBb3QWTarabWzvSqQKCmLctRNtD6mx"
        ],
        "license": "MIT"
      },
      "contracts/ERC721Tradable.sol": {
        "keccak256": "0x8fd4f36944967e6d1081f116e06542ccba50dcde4dd5d8acf498bb5a71eb4e61",
        "urls": [
          "bzz-raw://b051dab56bf82fe306a45cb486656234f940e066ae7b5ab37f326bf3c643afd3",
          "dweb:/ipfs/QmfPLsTyRzrKKDQrERocr5H5gHgXWpEGYat7pPGjKTY4Dt"
        ],
        "license": "MIT"
      },
      "contracts/IFactoryERC721.sol": {
        "keccak256": "0x2ea4cc5c73c77d2d2319f7c04ebd42b50c8a52457e81b20b0f5be9c5aae63ea0",
        "urls": [
          "bzz-raw://de8631be9163bccbd5c80a6ce77c1bc57660d434c813d7a5eab7b939afe0506b",
          "dweb:/ipfs/QmVr1amUYc47Z7rsYuLTgdbxBK55PGSeaK2AMLKneXxVaq"
        ],
        "license": "MIT"
      },
      "contracts/common/meta-transactions/ContentMixin.sol": {
        "keccak256": "0x92409bc8d2c1be83e14de02f07d791230699dee7abb70f3b7eff2425b8cc929c",
        "urls": [
          "bzz-raw://1dd37a1a5b74c26cbe341ae45e688afad30e86d4edfc20d296c59390f22d67b5",
          "dweb:/ipfs/QmWkQotAas3H2Z7e5Y4bL33Paa5t4fwcNMLLM67EowZQtZ"
        ],
        "license": "MIT"
      },
      "contracts/common/meta-transactions/EIP712Base.sol": {
        "keccak256": "0x40e64dca9e20cd12e88efe58a2bc2f41051325dd4896b5454bad6cfe53a969ac",
        "urls": [
          "bzz-raw://9979a678076f6937bcf732d916b0282e5e2d3cb7b1a3322a012a63f6f69aad99",
          "dweb:/ipfs/QmchJfxLDHWtBgb2YfMBWgniCiHivat96kDi3qQikvJEMQ"
        ],
        "license": "MIT"
      },
      "contracts/common/meta-transactions/Initializable.sol": {
        "keccak256": "0x397d4aa8cc6e019c7ed4e32e92db0935d6fdede224d5c6ae09136309eef15cde",
        "urls": [
          "bzz-raw://13460611492b8292c442cfdb24c27fa255a1a3acbf98430f3b2eb61a92c46c9f",
          "dweb:/ipfs/QmVK8kB1jkfgAM2fYXeRywBo5SV8uSpttQ3nLNMrdygmxn"
        ],
        "license": "MIT"
      },
      "contracts/common/meta-transactions/NativeMetaTransaction.sol": {
        "keccak256": "0x3cd9f941ba4d057738d8ba5798c5a57ea2893ebb778fea50bb9e282b2d3315f0",
        "urls": [
          "bzz-raw://77592d2882edc0e5e99344e7c521b9eda883e6f0578061bebbae4777be9fbdf8",
          "dweb:/ipfs/QmXtbiaBqoitNW63EQbiwkHQEJ8geJjR7wu1QJWhRUYKeT"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7",
        "urls": [
          "bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23",
          "dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf",
        "urls": [
          "bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38",
          "dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4",
        "urls": [
          "bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de",
          "dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11",
        "urls": [
          "bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406",
          "dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776",
        "urls": [
          "bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56",
          "dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656",
        "urls": [
          "bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe",
          "dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3",
        "urls": [
          "bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405",
          "dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0x74f630d2664c1581a1cbd0730d4ba119b3a184ef90c65f3a934be4d16d0e58a1",
        "urls": [
          "bzz-raw://cadad0b133129f946a53e0f61fa387803ccdc010d9c794da0738bb7fc5001b66",
          "dweb:/ipfs/QmQdTBpUT9WgDuCm7womDFiAnksepw6Fmi5Z5vv1H17Qr1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38",
        "urls": [
          "bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132",
          "dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf",
        "urls": [
          "bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c",
          "dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9",
        "urls": [
          "bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93",
          "dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434",
        "urls": [
          "bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d",
          "dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CreatureFactory.sol",
    "id": 1223,
    "exportedSymbols": {
      "Address": [
        6151
      ],
      "Context": [
        6173
      ],
      "ContextMixin": [
        2947
      ],
      "Counters": [
        6247
      ],
      "Creature": [
        26
      ],
      "CreatureFactory": [
        1222
      ],
      "CreatureLootBox": [
        1319
      ],
      "EIP712Base": [
        3063
      ],
      "ERC165": [
        6474
      ],
      "ERC721": [
        5693
      ],
      "ERC721Tradable": [
        2019
      ],
      "FactoryERC721": [
        2144
      ],
      "IERC165": [
        6486
      ],
      "IERC721": [
        5809
      ],
      "IERC721Metadata": [
        5854
      ],
      "IERC721Receiver": [
        5827
      ],
      "NativeMetaTransaction": [
        3282
      ],
      "Ownable": [
        3548
      ],
      "OwnableDelegateProxy": [
        1847
      ],
      "ProxyRegistry": [
        1854
      ],
      "SafeMath": [
        6798
      ],
      "Strings": [
        6450
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:5555:4",
    "nodes": [
      {
        "id": 766,
        "nodeType": "PragmaDirective",
        "src": "33:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 767,
        "nodeType": "ImportDirective",
        "src": "58:52:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1223,
        "sourceUnit": 3549,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 768,
        "nodeType": "ImportDirective",
        "src": "111:51:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1223,
        "sourceUnit": 6451,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 769,
        "nodeType": "ImportDirective",
        "src": "163:30:4",
        "nodes": [],
        "absolutePath": "contracts/IFactoryERC721.sol",
        "file": "./IFactoryERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1223,
        "sourceUnit": 2145,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 770,
        "nodeType": "ImportDirective",
        "src": "194:24:4",
        "nodes": [],
        "absolutePath": "contracts/Creature.sol",
        "file": "./Creature.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1223,
        "sourceUnit": 27,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 771,
        "nodeType": "ImportDirective",
        "src": "219:31:4",
        "nodes": [],
        "absolutePath": "contracts/CreatureLootBox.sol",
        "file": "./CreatureLootBox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1223,
        "sourceUnit": 1320,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1222,
        "nodeType": "ContractDefinition",
        "src": "252:5335:4",
        "nodes": [
          {
            "id": 778,
            "nodeType": "UsingForDirective",
            "src": "309:25:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 776,
              "name": "Strings",
              "nameLocations": [
                "315:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6450,
              "src": "315:7:4"
            },
            "typeName": {
              "id": 777,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "327:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 786,
            "nodeType": "EventDefinition",
            "src": "340:112:4",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "346:8:4",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "380:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "364:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "410:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "394:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "438:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "422:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "354:97:4"
            }
          },
          {
            "id": 788,
            "nodeType": "VariableDeclaration",
            "src": "458:35:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "cd7c0326",
            "mutability": "mutable",
            "name": "proxyRegistryAddress",
            "nameLocation": "473:20:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 787,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 790,
            "nodeType": "VariableDeclaration",
            "src": "499:25:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "5bf8633a",
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "514:10:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 789,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 792,
            "nodeType": "VariableDeclaration",
            "src": "530:32:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec07d02e",
            "mutability": "mutable",
            "name": "lootBoxNftAddress",
            "nameLocation": "545:17:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "530:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 795,
            "nodeType": "VariableDeclaration",
            "src": "568:71:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "582:7:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 793,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "568:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "68747470733a2f2f6372656174757265732d6170692e6f70656e7365612e696f2f6170692f666163746f72792f",
              "id": 794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "592:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_29dd1c4f1880428c4a7e955a101dffe14aeefb8e0da1a90f118d860367da377d",
                "typeString": "literal_string \"https://creatures-api.opensea.io/api/factory/\""
              },
              "value": "https://creatures-api.opensea.io/api/factory/"
            },
            "visibility": "public"
          },
          {
            "id": 798,
            "nodeType": "VariableDeclaration",
            "src": "721:29:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "CREATURE_SUPPLY",
            "nameLocation": "729:15:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "721:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "747:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "id": 801,
            "nodeType": "VariableDeclaration",
            "src": "853:23:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "NUM_OPTIONS",
            "nameLocation": "861:11:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 799,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "853:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "875:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "id": 804,
            "nodeType": "VariableDeclaration",
            "src": "882:34:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "SINGLE_CREATURE_OPTION",
            "nameLocation": "890:22:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 802,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "882:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "915:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 807,
            "nodeType": "VariableDeclaration",
            "src": "922:36:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MULTIPLE_CREATURE_OPTION",
            "nameLocation": "930:24:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 805,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "922:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 806,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "957:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 810,
            "nodeType": "VariableDeclaration",
            "src": "964:26:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "LOOTBOX_OPTION",
            "nameLocation": "972:14:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 808,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "964:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 809,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "989:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "id": 813,
            "nodeType": "VariableDeclaration",
            "src": "996:53:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "NUM_CREATURES_IN_MULTIPLE_CREATURE_OPTION",
            "nameLocation": "1004:41:4",
            "scope": 1222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "996:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 812,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1048:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "internal"
          },
          {
            "id": 853,
            "nodeType": "FunctionDefinition",
            "src": "1056:327:4",
            "nodes": [],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "1120:263:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 820,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "1130:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 821,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "1153:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1130:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:44:4"
                },
                {
                  "expression": {
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 824,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "1184:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 825,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "1197:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1184:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:24:4"
                },
                {
                  "expression": {
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 828,
                      "name": "lootBoxNftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "1218:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 834,
                              "name": "_proxyRegistryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "1279:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 837,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1310:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CreatureFactory_$1222",
                                    "typeString": "contract CreatureFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CreatureFactory_$1222",
                                    "typeString": "contract CreatureFactory"
                                  }
                                ],
                                "id": 836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1302:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 835,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1302:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1302:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1259:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_CreatureLootBox_$1319_$",
                              "typeString": "function (address,address) returns (contract CreatureLootBox)"
                            },
                            "typeName": {
                              "id": 832,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 831,
                                "name": "CreatureLootBox",
                                "nameLocations": [
                                  "1263:15:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1319,
                                "src": "1263:15:4"
                              },
                              "referencedDeclaration": 1319,
                              "src": "1263:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                "typeString": "contract CreatureLootBox"
                              }
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1259:57:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                            "typeString": "contract CreatureLootBox"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                            "typeString": "contract CreatureLootBox"
                          }
                        ],
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1238:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1238:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1238:88:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1218:108:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1364:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1356:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 844,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1356:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1356:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 848,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "1368:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 843,
                      "name": "fireTransferEvents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "1337:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:39:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "_proxyRegistryAddress",
                  "nameLocation": "1076:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "1068:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "1107:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "1099:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1067:52:4"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:4"
            },
            "scope": 1222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 862,
            "nodeType": "FunctionDefinition",
            "src": "1389:114:4",
            "nodes": [],
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "1452:51:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "4f70656e5365614372656174757265204974656d2053616c65",
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1469:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9bbaf852cfbe5e2d29f88d0e47afa807dac2dea7e82900ebe7c0fa5048c07678",
                      "typeString": "literal_string \"OpenSeaCreature Item Sale\""
                    },
                    "value": "OpenSeaCreature Item Sale"
                  },
                  "functionReturnParameters": 858,
                  "id": 860,
                  "nodeType": "Return",
                  "src": "1462:34:4"
                }
              ]
            },
            "baseFunctions": [
              2101
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1398:4:4",
            "overrides": {
              "id": 855,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1405:8:4"
            },
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1402:2:4"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "1437:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:15:4"
            },
            "scope": 1222,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 871,
            "nodeType": "FunctionDefinition",
            "src": "1509:94:4",
            "nodes": [],
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "1574:29:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "435046",
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1591:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_55c1efbfceeaa77d950576dc22d468952a175fb8f4066f44f0b95324ec633d11",
                      "typeString": "literal_string \"CPF\""
                    },
                    "value": "CPF"
                  },
                  "functionReturnParameters": 867,
                  "id": 869,
                  "nodeType": "Return",
                  "src": "1584:12:4"
                }
              ]
            },
            "baseFunctions": [
              2107
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1518:6:4",
            "overrides": {
              "id": 864,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1527:8:4"
            },
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:2:4"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "1559:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:15:4"
            },
            "scope": 1222,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 880,
            "nodeType": "FunctionDefinition",
            "src": "1609:100:4",
            "nodes": [],
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "1681:28:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1698:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 876,
                  "id": 878,
                  "nodeType": "Return",
                  "src": "1691:11:4"
                }
              ]
            },
            "baseFunctions": [
              2135
            ],
            "functionSelector": "c311c523",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsFactoryInterface",
            "nameLocation": "1618:24:4",
            "overrides": {
              "id": 873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1645:8:4"
            },
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:2:4"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "1675:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:6:4"
            },
            "scope": 1222,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 889,
            "nodeType": "FunctionDefinition",
            "src": "1715:96:4",
            "nodes": [],
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "1776:35:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 886,
                    "name": "NUM_OPTIONS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 801,
                    "src": "1793:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 885,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "1786:18:4"
                }
              ]
            },
            "baseFunctions": [
              2113
            ],
            "functionSelector": "4b97aed9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numOptions",
            "nameLocation": "1724:10:4",
            "overrides": {
              "id": 882,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1737:8:4"
            },
            "parameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:2:4"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1767:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:9:4"
            },
            "scope": 1222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 914,
            "nodeType": "FunctionDefinition",
            "src": "1817:209:4",
            "nodes": [],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "1888:138:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "mutability": "mutable",
                      "name": "_prevOwner",
                      "nameLocation": "1906:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1898:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 897,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1898:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 899,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3476,
                      "src": "1919:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1898:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 905,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1960:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 902,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1936:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CreatureFactory_$1222_$",
                          "typeString": "type(contract super CreatureFactory)"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1942:17:4",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3527,
                      "src": "1936:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "1936:33:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 909,
                        "name": "_prevOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "1998:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 910,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "2010:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 908,
                      "name": "fireTransferEvents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "1979:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:40:4"
                }
              ]
            },
            "baseFunctions": [
              3527
            ],
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 894,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1878:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3490,
                  "src": "1878:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1878:9:4"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1826:17:4",
            "overrides": {
              "id": 893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1862:8:4"
            },
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1852:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1844:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1843:18:4"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:4"
            },
            "scope": 1222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 940,
            "nodeType": "FunctionDefinition",
            "src": "2032:175:4",
            "nodes": [],
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "2096:111:4",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 937,
                    "nodeType": "Block",
                    "src": "2148:53:4",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 932,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "2176:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 933,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "2183:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 934,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "2188:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 931,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "2167:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2167:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 936,
                        "nodeType": "EmitStatement",
                        "src": "2162:28:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 925,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "2126:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 926,
                      "name": "NUM_OPTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "2130:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2126:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 938,
                  "initializationExpression": {
                    "assignments": [
                      922
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2119:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "2111:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 924,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2111:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2143:3:4",
                      "subExpression": {
                        "id": 928,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "2143:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 930,
                    "nodeType": "ExpressionStatement",
                    "src": "2143:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2106:95:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fireTransferEvents",
            "nameLocation": "2041:18:4",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2068:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2060:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2083:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2075:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:28:4"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2096:0:4"
            },
            "scope": 1222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1046,
            "nodeType": "FunctionDefinition",
            "src": "2213:1099:4",
            "nodes": [],
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "2282:1030:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "proxyRegistry",
                      "nameLocation": "2361:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "2347:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "id": 949,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 948,
                          "name": "ProxyRegistry",
                          "nameLocations": [
                            "2347:13:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1854,
                          "src": "2347:13:4"
                        },
                        "referencedDeclaration": 1854,
                        "src": "2347:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 954,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "2391:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 951,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1854,
                      "src": "2377:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$1854_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2347:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 960,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3476,
                                        "src": "2472:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2472:7:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 958,
                                      "name": "proxyRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 950,
                                      "src": "2450:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                                        "typeString": "contract ProxyRegistry"
                                      }
                                    },
                                    "id": 959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2464:7:4",
                                    "memberName": "proxies",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1853,
                                    "src": "2450:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$1847_$",
                                      "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                                    }
                                  },
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2450:30:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OwnableDelegateProxy_$1847",
                                    "typeString": "contract OwnableDelegateProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OwnableDelegateProxy_$1847",
                                    "typeString": "contract OwnableDelegateProxy"
                                  }
                                ],
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2442:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 956,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2442:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2442:39:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 964,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6163,
                                "src": "2485:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2485:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2442:55:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 967,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3476,
                                "src": "2517:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2517:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 969,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6163,
                                "src": "2528:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2528:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2517:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2442:98:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 973,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6163,
                              "src": "2560:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2560:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 975,
                            "name": "lootBoxNftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "2576:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2560:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2442:151:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 955,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2422:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:181:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:181:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 982,
                            "name": "_optionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2629:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 981,
                          "name": "canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "2621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2621:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2613:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:27:4"
                },
                {
                  "assignments": [
                    988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 988,
                      "mutability": "mutable",
                      "name": "openSeaCreature",
                      "nameLocation": "2660:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "2651:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Creature_$26",
                        "typeString": "contract Creature"
                      },
                      "typeName": {
                        "id": 987,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 986,
                          "name": "Creature",
                          "nameLocations": [
                            "2651:8:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26,
                          "src": "2651:8:4"
                        },
                        "referencedDeclaration": 26,
                        "src": "2651:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Creature_$26",
                          "typeString": "contract Creature"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 992,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 990,
                        "name": "nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "2687:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "Creature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2678:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Creature_$26_$",
                        "typeString": "type(contract Creature)"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Creature_$26",
                      "typeString": "contract Creature"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2651:47:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 993,
                      "name": "_optionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "2712:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 994,
                      "name": "SINGLE_CREATURE_OPTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "2725:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2712:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1003,
                        "name": "_optionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "2818:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1004,
                        "name": "MULTIPLE_CREATURE_OPTION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "2831:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2818:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1025,
                          "name": "_optionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "3092:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1026,
                          "name": "LOOTBOX_OPTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "3105:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3092:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1042,
                      "nodeType": "IfStatement",
                      "src": "3088:218:4",
                      "trueBody": {
                        "id": 1041,
                        "nodeType": "Block",
                        "src": "3121:185:4",
                        "statements": [
                          {
                            "assignments": [
                              1030
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1030,
                                "mutability": "mutable",
                                "name": "openSeaCreatureLootBox",
                                "nameLocation": "3151:22:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 1041,
                                "src": "3135:38:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                  "typeString": "contract CreatureLootBox"
                                },
                                "typeName": {
                                  "id": 1029,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1028,
                                    "name": "CreatureLootBox",
                                    "nameLocations": [
                                      "3135:15:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1319,
                                    "src": "3135:15:4"
                                  },
                                  "referencedDeclaration": 1319,
                                  "src": "3135:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                    "typeString": "contract CreatureLootBox"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1034,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1032,
                                  "name": "lootBoxNftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 792,
                                  "src": "3209:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1031,
                                "name": "CreatureLootBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1319,
                                "src": "3176:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CreatureLootBox_$1319_$",
                                  "typeString": "type(contract CreatureLootBox)"
                                }
                              },
                              "id": 1033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3176:64:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                "typeString": "contract CreatureLootBox"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3135:105:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1038,
                                  "name": "_toAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 944,
                                  "src": "3284:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1035,
                                  "name": "openSeaCreatureLootBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "3254:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                    "typeString": "contract CreatureLootBox"
                                  }
                                },
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3277:6:4",
                                "memberName": "mintTo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1928,
                                "src": "3254:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address) external"
                                }
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3254:41:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1040,
                            "nodeType": "ExpressionStatement",
                            "src": "3254:41:4"
                          }
                        ]
                      }
                    },
                    "id": 1043,
                    "nodeType": "IfStatement",
                    "src": "2814:492:4",
                    "trueBody": {
                      "id": 1024,
                      "nodeType": "Block",
                      "src": "2857:225:4",
                      "statements": [
                        {
                          "body": {
                            "id": 1022,
                            "nodeType": "Block",
                            "src": "3005:67:4",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1019,
                                      "name": "_toAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 944,
                                      "src": "3046:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1016,
                                      "name": "openSeaCreature",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 988,
                                      "src": "3023:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Creature_$26",
                                        "typeString": "contract Creature"
                                      }
                                    },
                                    "id": 1018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3039:6:4",
                                    "memberName": "mintTo",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1928,
                                    "src": "3023:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address) external"
                                    }
                                  },
                                  "id": 1020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3023:34:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1021,
                                "nodeType": "ExpressionStatement",
                                "src": "3023:34:4"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1010,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "2924:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1011,
                              "name": "NUM_CREATURES_IN_MULTIPLE_CREATURE_OPTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "2928:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2924:45:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1023,
                          "initializationExpression": {
                            "assignments": [
                              1007
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1007,
                                "mutability": "mutable",
                                "name": "i",
                                "nameLocation": "2901:1:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 1023,
                                "src": "2893:9:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1006,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2893:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1009,
                            "initialValue": {
                              "hexValue": "30",
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2905:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2893:13:4"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2987:3:4",
                              "subExpression": {
                                "id": 1013,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1007,
                                "src": "2987:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1015,
                            "nodeType": "ExpressionStatement",
                            "src": "2987:3:4"
                          },
                          "nodeType": "ForStatement",
                          "src": "2871:201:4"
                        }
                      ]
                    }
                  },
                  "id": 1044,
                  "nodeType": "IfStatement",
                  "src": "2708:598:4",
                  "trueBody": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "2749:59:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 999,
                              "name": "_toAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 944,
                              "src": "2786:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 996,
                              "name": "openSeaCreature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "2763:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Creature_$26",
                                "typeString": "contract Creature"
                              }
                            },
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2779:6:4",
                            "memberName": "mintTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1928,
                            "src": "2763:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2763:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1001,
                        "nodeType": "ExpressionStatement",
                        "src": "2763:34:4"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              2143
            ],
            "functionSelector": "94bf804d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2222:4:4",
            "overrides": {
              "id": 946,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2266:8:4"
            },
            "parameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "_optionId",
                  "nameLocation": "2235:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "2227:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "_toAddress",
                  "nameLocation": "2254:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "2246:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2226:39:4"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2282:0:4"
            },
            "scope": 1222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1122,
            "nodeType": "FunctionDefinition",
            "src": "3318:862:4",
            "nodes": [],
            "body": {
              "id": 1121,
              "nodeType": "Block",
              "src": "3390:790:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1054,
                      "name": "_optionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "3404:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1055,
                      "name": "NUM_OPTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "3417:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3404:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "nodeType": "IfStatement",
                  "src": "3400:67:4",
                  "trueBody": {
                    "id": 1059,
                    "nodeType": "Block",
                    "src": "3430:37:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3451:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1053,
                        "id": 1058,
                        "nodeType": "Return",
                        "src": "3444:12:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "openSeaCreature",
                      "nameLocation": "3486:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1121,
                      "src": "3477:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Creature_$26",
                        "typeString": "contract Creature"
                      },
                      "typeName": {
                        "id": 1062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1061,
                          "name": "Creature",
                          "nameLocations": [
                            "3477:8:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26,
                          "src": "3477:8:4"
                        },
                        "referencedDeclaration": 26,
                        "src": "3477:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Creature_$26",
                          "typeString": "contract Creature"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "3513:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1064,
                      "name": "Creature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3504:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Creature_$26_$",
                        "typeString": "type(contract Creature)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Creature_$26",
                      "typeString": "contract Creature"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3477:47:4"
                },
                {
                  "assignments": [
                    1069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1069,
                      "mutability": "mutable",
                      "name": "creatureSupply",
                      "nameLocation": "3542:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1121,
                      "src": "3534:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3534:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1073,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1070,
                        "name": "openSeaCreature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "3559:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Creature_$26",
                          "typeString": "contract Creature"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3575:11:4",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "3559:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3534:54:4"
                },
                {
                  "assignments": [
                    1075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1075,
                      "mutability": "mutable",
                      "name": "numItemsAllocated",
                      "nameLocation": "3607:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1121,
                      "src": "3599:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3599:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1077,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3627:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3599:29:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1078,
                      "name": "_optionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "3642:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1079,
                      "name": "SINGLE_CREATURE_OPTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "3655:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3642:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1086,
                        "name": "_optionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "3735:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1087,
                        "name": "MULTIPLE_CREATURE_OPTION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "3748:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3735:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "_optionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "3870:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1095,
                          "name": "LOOTBOX_OPTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "3883:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3870:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1111,
                      "nodeType": "IfStatement",
                      "src": "3866:237:4",
                      "trueBody": {
                        "id": 1110,
                        "nodeType": "Block",
                        "src": "3899:204:4",
                        "statements": [
                          {
                            "assignments": [
                              1099
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1099,
                                "mutability": "mutable",
                                "name": "openSeaCreatureLootBox",
                                "nameLocation": "3929:22:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 1110,
                                "src": "3913:38:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                  "typeString": "contract CreatureLootBox"
                                },
                                "typeName": {
                                  "id": 1098,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1097,
                                    "name": "CreatureLootBox",
                                    "nameLocations": [
                                      "3913:15:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1319,
                                    "src": "3913:15:4"
                                  },
                                  "referencedDeclaration": 1319,
                                  "src": "3913:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                    "typeString": "contract CreatureLootBox"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1103,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1101,
                                  "name": "lootBoxNftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 792,
                                  "src": "3987:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1100,
                                "name": "CreatureLootBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1319,
                                "src": "3954:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CreatureLootBox_$1319_$",
                                  "typeString": "type(contract CreatureLootBox)"
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3954:64:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                "typeString": "contract CreatureLootBox"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3913:105:4"
                          },
                          {
                            "expression": {
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1104,
                                "name": "numItemsAllocated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1075,
                                "src": "4032:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1105,
                                    "name": "openSeaCreatureLootBox",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1099,
                                    "src": "4052:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CreatureLootBox_$1319",
                                      "typeString": "contract CreatureLootBox"
                                    }
                                  },
                                  "id": 1106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4075:15:4",
                                  "memberName": "itemsPerLootbox",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1318,
                                  "src": "4052:38:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4052:40:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4032:60:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1109,
                            "nodeType": "ExpressionStatement",
                            "src": "4032:60:4"
                          }
                        ]
                      }
                    },
                    "id": 1112,
                    "nodeType": "IfStatement",
                    "src": "3731:372:4",
                    "trueBody": {
                      "id": 1093,
                      "nodeType": "Block",
                      "src": "3774:86:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 1091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1089,
                              "name": "numItemsAllocated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "3788:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1090,
                              "name": "NUM_CREATURES_IN_MULTIPLE_CREATURE_OPTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "3808:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3788:61:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1092,
                          "nodeType": "ExpressionStatement",
                          "src": "3788:61:4"
                        }
                      ]
                    }
                  },
                  "id": 1113,
                  "nodeType": "IfStatement",
                  "src": "3638:465:4",
                  "trueBody": {
                    "id": 1085,
                    "nodeType": "Block",
                    "src": "3679:46:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1081,
                            "name": "numItemsAllocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "3693:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3713:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3693:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1084,
                        "nodeType": "ExpressionStatement",
                        "src": "3693:21:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1114,
                      "name": "creatureSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "4119:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1115,
                            "name": "CREATURE_SUPPLY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4137:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1116,
                            "name": "numItemsAllocated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "4155:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4137:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1118,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4136:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4119:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1053,
                  "id": 1120,
                  "nodeType": "Return",
                  "src": "4112:61:4"
                }
              ]
            },
            "baseFunctions": [
              2121
            ],
            "functionSelector": "5dd871a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canMint",
            "nameLocation": "3327:7:4",
            "overrides": {
              "id": 1050,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3354:8:4"
            },
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "_optionId",
                  "nameLocation": "3343:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "3335:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:19:4"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "3384:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:6:4"
            },
            "scope": 1222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1143,
            "nodeType": "FunctionDefinition",
            "src": "4186:170:4",
            "nodes": [],
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "4270:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1134,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "4311:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1137,
                                "name": "_optionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1124,
                                "src": "4337:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1135,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6450,
                                "src": "4320:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$6450_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4328:8:4",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6332,
                              "src": "4320:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4320:27:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1132,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4294:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4298:12:4",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4294:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4294:54:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4287:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4287:6:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1141,
                  "nodeType": "Return",
                  "src": "4280:69:4"
                }
              ]
            },
            "baseFunctions": [
              2129
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4195:8:4",
            "overrides": {
              "id": 1126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4223:8:4"
            },
            "parameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "_optionId",
                  "nameLocation": "4212:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "4204:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4203:19:4"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "4255:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4254:15:4"
            },
            "scope": 1222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1159,
            "nodeType": "FunctionDefinition",
            "src": "4530:135:4",
            "nodes": [],
            "body": {
              "id": 1158,
              "nodeType": "Block",
              "src": "4629:36:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1154,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1150,
                        "src": "4644:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1155,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "4654:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1153,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "4639:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4639:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:19:4"
                }
              ]
            },
            "documentation": {
              "id": 1144,
              "nodeType": "StructuredDocumentation",
              "src": "4362:163:4",
              "text": " Hack to get things to work automatically on OpenSea.\n Use transferFrom so the frontend doesn't have to worry about different method names."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4539:12:4",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "4561:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1148,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4586:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "4578:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4607:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "4599:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4599:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4551:70:4"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4629:0:4"
            },
            "scope": 1222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1209,
            "nodeType": "FunctionDefinition",
            "src": "4843:470:4",
            "nodes": [],
            "body": {
              "id": 1208,
              "nodeType": "Block",
              "src": "4959:354:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1169,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "4973:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4973:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1171,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "4984:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4973:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1173,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "4994:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1174,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "5004:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4994:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4973:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1180,
                  "nodeType": "IfStatement",
                  "src": "4969:82:4",
                  "trueBody": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "5015:36:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5036:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1168,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "5029:11:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "proxyRegistry",
                      "nameLocation": "5075:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "5061:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "id": 1182,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1181,
                          "name": "ProxyRegistry",
                          "nameLocations": [
                            "5061:13:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1854,
                          "src": "5061:13:4"
                        },
                        "referencedDeclaration": 1854,
                        "src": "5061:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1187,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1185,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "5105:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1184,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1854,
                      "src": "5091:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$1854_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5091:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5061:65:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1188,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "5153:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5153:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "5164:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5153:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1196,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "5216:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1194,
                                "name": "proxyRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1183,
                                "src": "5194:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ProxyRegistry_$1854",
                                  "typeString": "contract ProxyRegistry"
                                }
                              },
                              "id": 1195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5208:7:4",
                              "memberName": "proxies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1853,
                              "src": "5194:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$1847_$",
                                "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5194:29:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OwnableDelegateProxy_$1847",
                              "typeString": "contract OwnableDelegateProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OwnableDelegateProxy_$1847",
                              "typeString": "contract OwnableDelegateProxy"
                            }
                          ],
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5186:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5186:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1199,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "5228:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5186:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5153:84:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1205,
                  "nodeType": "IfStatement",
                  "src": "5136:148:4",
                  "trueBody": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "5248:36:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5269:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1168,
                        "id": 1203,
                        "nodeType": "Return",
                        "src": "5262:11:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5301:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1168,
                  "id": 1207,
                  "nodeType": "Return",
                  "src": "5294:12:4"
                }
              ]
            },
            "documentation": {
              "id": 1160,
              "nodeType": "StructuredDocumentation",
              "src": "4671:167:4",
              "text": " Hack to get things to work automatically on OpenSea.\n Use isApprovedForAll so the frontend doesn't have to worry about different method names."
            },
            "functionSelector": "e985e9c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4852:16:4",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4877:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "4869:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4869:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "4893:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "4885:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4885:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4868:35:4"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "4949:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:4"
            },
            "scope": 1222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1221,
            "nodeType": "FunctionDefinition",
            "src": "5491:94:4",
            "nodes": [],
            "body": {
              "id": 1220,
              "nodeType": "Block",
              "src": "5554:31:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1217,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3476,
                      "src": "5571:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1216,
                  "id": 1219,
                  "nodeType": "Return",
                  "src": "5564:14:4"
                }
              ]
            },
            "documentation": {
              "id": 1210,
              "nodeType": "StructuredDocumentation",
              "src": "5319:167:4",
              "text": " Hack to get things to work automatically on OpenSea.\n Use isApprovedForAll so the frontend doesn't have to worry about different method names."
            },
            "functionSelector": "6352211e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "5500:7:4",
            "parameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "5508:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5507:9:4"
            },
            "returnParameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5546:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "5538:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5538:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5537:16:4"
            },
            "scope": 1222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 772,
              "name": "FactoryERC721",
              "nameLocations": [
                "280:13:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2144,
              "src": "280:13:4"
            },
            "id": 773,
            "nodeType": "InheritanceSpecifier",
            "src": "280:13:4"
          },
          {
            "baseName": {
              "id": 774,
              "name": "Ownable",
              "nameLocations": [
                "295:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3548,
              "src": "295:7:4"
            },
            "id": 775,
            "nodeType": "InheritanceSpecifier",
            "src": "295:7:4"
          }
        ],
        "canonicalName": "CreatureFactory",
        "contractDependencies": [
          1319
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1222,
          3548,
          6173,
          2144
        ],
        "name": "CreatureFactory",
        "nameLocation": "261:15:4",
        "scope": 1223,
        "usedErrors": [],
        "usedEvents": [
          786,
          3457
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 4
}